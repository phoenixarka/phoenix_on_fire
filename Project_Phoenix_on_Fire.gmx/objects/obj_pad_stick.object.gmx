<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_go</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DirdeltaX</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DirdeltaY</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DirmouseNum</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>charge_mouseNum</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bomb_mouseNum</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>charge_press</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bomb_press</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>judge_mouse dir control</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    for(i = 0; i &lt; 4; i++)
    {
        if(device_mouse_check_button(i,mb_left) &amp;&amp; (i != charge_mouseNum) &amp;&amp; ( i != bomb_mouseNum))
        {   
            //avoid the bomb/charge
            delta_x2 = device_mouse_x(i) - bombcenterX;
            delta_y2 = device_mouse_y(i) - bombcenterY;
            dist2 = sqrt((delta_x2 * delta_x2) + (delta_y2 * delta_y2));
            
            delta_x3 = device_mouse_x(i) - chargecenterX;
            delta_y3 = device_mouse_y(i) - chargecenterY;
            dist3 = sqrt((delta_x3 * delta_x3) + (delta_y3 * delta_y3));
            
            if(dist2 &gt; view_wview/16 &amp;&amp; dist3 &gt; view_wview/16 &amp;&amp; DirmouseNum == -1)
            {             
                DirmouseNum = i;
                mousePrevX = device_mouse_x(i);
                mousePrevY = device_mouse_y(i);
            } 
            else
            {
                DirdeltaX = 0;
                DirdeltaY = 0;
            }
        }
    }
    
    if(DirmouseNum &gt; -1)
    {

       if(device_mouse_check_button(DirmouseNum,mb_left))
        {        
            mouseCurrX = device_mouse_x(DirmouseNum);
            mouseCurrY = device_mouse_y(DirmouseNum);
             
            DirdeltaX = mouseCurrX - mousePrevX;
            DirdeltaY = mouseCurrY - mousePrevY;   
            
            mousePrevX = device_mouse_x(DirmouseNum);
            mousePrevY = device_mouse_y(DirmouseNum);
            
            if (view_yview &gt; 0)
            {DirdeltaY =DirdeltaY + obj_controler.view_speed;}
        }
        else
        {
            DirdeltaX = 0;
            DirdeltaY = 0;
            DirmouseNum = -1;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>judge_mouse bomb charge control</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    bombcenterX = view_xview + (view_wview * 15 /16);
    bombcenterY = view_yview + view_hview - (view_wview * 3/16);
    chargecenterX = view_xview + (view_wview * 15 /16);
    chargecenterY = view_yview + view_hview - (view_wview * 6/16);
    
    //Check Bomb
    for(i = 0; i &lt; 4; i++)
    {
        if(device_mouse_check_button(i,mb_left) &amp;&amp; (i != DirmouseNum) &amp;&amp; (i != charge_mouseNum))
        {
            delta_x = device_mouse_x(i) - bombcenterX;
            delta_y = device_mouse_y(i) - bombcenterY;
            dist2 = sqrt((delta_x * delta_x) + (delta_y * delta_y));
            
            if(dist2 &lt; view_wview/16)
            {
                bomb_mouseNum = i;
            }
        }
    }
    
    if(bomb_mouseNum &gt; -1)
    {
        if(device_mouse_check_button_pressed(bomb_mouseNum, mb_left))
        {
            if(bomb_press == 0)
            {bomb_press = 1;}
        }
        
        if(device_mouse_check_button_released(bomb_mouseNum, mb_left))
        {
            bomb_press = 0;
            bomb_mouseNum = -1;
        }
    }
    
    //Check Charge
    for(i = 0; i &lt; 4; i++)
    {
        if(device_mouse_check_button(i,mb_left) &amp;&amp; (i != DirmouseNum) &amp;&amp; ( i != bomb_mouseNum))
        {
            delta_x = device_mouse_x(i) - chargecenterX;
            delta_y = device_mouse_y(i) - chargecenterY;
            dist3 = sqrt((delta_x * delta_x) + (delta_y * delta_y));
            
            if(dist3 &lt; view_wview/16)
            {charge_mouseNum = i;}
        }
    }
    
    if(charge_mouseNum &gt; -1)
    {
        if(device_mouse_check_button_pressed(charge_mouseNum, mb_left))
        {charge_press = 1;}
        
        if(device_mouse_check_button_released(charge_mouseNum, mb_left))
        {
            charge_press = 0;
            charge_mouseNum = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>follow</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(view_yview &gt; 0)
    {
        y-=obj_controler.view_speed;  
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{    
    //draw charge pad
    draw_set_font(font_title);
    draw_set_alpha(0.5);
    for(i = 16; i &lt; 25; i += 1)
    {draw_circle_color(view_xview + (view_wview * 15 /16), view_yview + view_hview - (view_wview * 3/16), view_wview /i, $FFFFFF, $19B4FF, true);    }
    draw_circle_color(view_xview + (view_wview * 15 /16), view_yview + view_hview - (view_wview * 3/16), view_wview /25, $FFFFFF, $FFFFFF, false);    
    draw_set_alpha(1);
    draw_text_color(view_xview + (view_wview * 15 /16)-15, view_yview + view_hview - (view_wview * 3/16) - 30, "B",$0080FF, $000080, $0080FF, $000080, 0.6);
    
    //draw bomb pad
    draw_set_alpha(0.5);
    for(i = 16; i &lt; 25; i += 1)
    {draw_circle_color(view_xview + (view_wview * 15 /16), view_yview + view_hview - (view_wview * 6/16), view_wview /i, $FFFFFF, $FFB414, false);}    
    draw_circle_color(view_xview + (view_wview * 15 /16), view_yview + view_hview - (view_wview * 6/16), view_wview /25, $FFFFFF, $FFFFFF, false);    
    draw_set_alpha(1);
    draw_text_color(view_xview + (view_wview * 15 /16) - 15, view_yview + view_hview - (view_wview * 6/16) - 30, "C", $FF8000, $800000, $FF8000, $800000, 0.6);
    draw_set_font(font_default);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>33,33</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
